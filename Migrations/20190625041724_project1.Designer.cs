// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using belt1.Models;

namespace belt1.Migrations
{
    [DbContext(typeof(MyContext))]
    [Migration("20190625041724_project1")]
    partial class project1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("belt1.Models.Associate", b =>
                {
                    b.Property<int>("AssosiateID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("DojoActivityID");

                    b.Property<int>("UserID");

                    b.HasKey("AssosiateID");

                    b.HasIndex("DojoActivityID");

                    b.HasIndex("UserID");

                    b.ToTable("Assosiates");
                });

            modelBuilder.Entity("belt1.Models.DojoActivity", b =>
                {
                    b.Property<int>("DojoActivityID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AssociateID");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<DateTime>("Date");

                    b.Property<string>("Description");

                    b.Property<string>("DojoActivityName")
                        .IsRequired();

                    b.Property<int>("Duration");

                    b.Property<TimeSpan>("Time");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<int>("UserID");

                    b.HasKey("DojoActivityID");

                    b.HasIndex("UserID");

                    b.ToTable("DojoActivitys");
                });

            modelBuilder.Entity("belt1.Models.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email");

                    b.Property<string>("Password");

                    b.Property<string>("UserName")
                        .IsRequired();

                    b.HasKey("UserID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("belt1.Models.Associate", b =>
                {
                    b.HasOne("belt1.Models.DojoActivity", "DojoActivity")
                        .WithMany("Guests")
                        .HasForeignKey("DojoActivityID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("belt1.Models.User", "User")
                        .WithMany("ActivitystoAttend")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("belt1.Models.DojoActivity", b =>
                {
                    b.HasOne("belt1.Models.User", "Creator")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
